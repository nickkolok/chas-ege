(function() {
	'use strict';
	NAinfo.requireApiVersion(0, 2);
	let p_1 = sluchch(40, 70),
		uvel = sluchch(2, 4),
		umin = sluchch(2, 4),
		p_2 = umin * sluchch(2, 3),
		p_3 = 100 - p_1 - p_2,
		k = sluchch(0, 1),
		koif = ['', 'вдвое', 'втрое', 'вчетверо'],
		people = [
			['отца', 'дедушки'][k],
			['матери', 'бабушки'][k],
			[['дочери', 'племянницы'].iz(), 'внучки'][k], [['сына', 'племянника'].iz(), 'внука'][k]
		],
		student = ['студентки', 'студента'];

	NAtask.setTask({
		text: `Семья состоит из ${people[0]},  ${people[1]} и их  ${people[2+k]} ${student[k]}. ` +
			`Если бы зарплата ${people[0]} увеличилась ${koif[uvel-1]}, общий доход семьи вырос бы на $ ${p_1*(uvel-1)} \\%$. ` +
			`Если бы стипендия ${people[2+k]} уменьшилась ${koif[umin-1]}, общий доход семьи сократился бы на $ ${(p_2*(1-1/umin)).ts()}\\%$. ` +
			`Сколько процентов от общего дохода семьи составляет зарплата ${people[1]}?`,
		answers: p_3,
	});
})();

