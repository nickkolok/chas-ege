(function() { 'use strict'; retryWhileError(function() {
	/* По двум параллельным железнодорожным путям навстречу друг другу следуют скорый и пассажирский поезда, скорости которых равны соответ-ственно 85 км/ч и 35 км/ч. Длина пассажирского поезда равна 250 метрам. Найдите длину скорого поезда, если время, за которое он прошёл мимо пассажирского, равно 30 секундам. Ответ дайте в метрах. */
	// Вариация на тему, неФИПИ


	//Переменные
	let v1=sl(3, 100, 0.01);//скорость 1го поезда
	let v2=sl(1, v1-1, 0.01);//скорость 2го поезда
	let l=sl(300, 900, 0.01);//длина 2го поезда
	let t=sl(10, 60, 0.01);//время проезда
	let answ=5*t*(v1+v2)/18-l;

	genAssert(answ>50,'длина поезда слишком маленькая');
	genAssertZ1000(answ,'ответ слишком дробный');
	//Декор
	let trains = sklonlxkand(["поезд","состав"]);
	let train_types=sklonlxkand(["скорый","пассажирский","товарный","почтовый","пожарный","пригородный","грузовой"].iz(2));
	let tr=[[train_types[0],trains.iz()],[train_types[1],trains.iz()]];
	genAssert(tr[0][0].ie+' '+tr[0][1].ie!='скорый состав'&&
			  tr[0][0].ie+' '+tr[0][1].ie!='пригородный состав'&&
			  tr[1][0].ie+' '+tr[1][1].ie!='скорый состав'&&
			  tr[1][0].ie+' '+tr[1][1].ie!='пригородный состав','плохие сочетания');
	let the_orderToFind = decor.orderToFind.iz(); // ["найдите","определите","вычислите"]

	NAtask.setTask({
		text:
			'По двум параллельным железнодорожным путям навстречу друг другу следуют ' + tr[0][0].ie+' '+tr[0][1].ie +' и ' + tr[1][0].ie+' '+tr[1][1].ie +', '+
			'скорости которых равны соответственно ' + v1 + ' $\\dfrac{\\text{км}}{\\text{ч}}$ и ' + v2 + ' $\\dfrac{\\text{км}}{\\text{ч}}$. '+
			'Длина ' + tr[1][0].re+' '+tr[1][1].re +' равна ' + chislitlx(l, 'метр', 'd') + '. ' + the_orderToFind.toZagl() +' длину ' + tr[0][0].re+' '+tr[0][1].re +', '+
			'если время, за которое он прошёл мимо ' + tr[1][0].re+' '+tr[1][1].re +', '+
			'равно ' + chislitlx(t, 'секунда', 'd') + '. '+
			'Ответ дайте в метрах.',
		answers: answ,
		authors: ['Aisse-258'],
	});
	NAtask.modifiers.allDecimalsToStandard();
}, 2000000);})();
